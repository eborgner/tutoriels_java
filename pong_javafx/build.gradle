import org.gradle.plugins.ide.eclipse.model.AccessRule

plugins {
    id 'java-library'
    id 'eclipse'
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

eclipse {
    classpath {
        file {
            whenMerged {
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'javafx/**'))
            }
        }
    }
}


repositories {
    jcenter()
}

dependencies {

    compile project(':commun')
    compile project(':commun_client')
    compile project(':commun_javafx')
    compile project(':pong')
    compile project(':pong_client')

    // Json serialization
    // https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Websocket
    // https://github.com/TooTallNate/Java-WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.4.0'
}

task(joueur01, dependsOn: 'classes', type: JavaExec) {
   main = 'pong_javafx.Principal'
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs('-Duser.language=fr')
   args('joueur01')
}

task(joueur01En, dependsOn: 'classes', type: JavaExec) {
   main = 'pong_javafx.Principal'
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs('-Duser.language=en')
   args('joueur01')
}

task(joueur02, dependsOn: 'classes', type: JavaExec) {
   main = 'pong_javafx.Principal'
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs('-Duser.language=fr')
   args('joueur02')
}

task(joueur02En, dependsOn: 'classes', type: JavaExec) {
   main = 'pong_javafx.Principal'
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs('-Duser.language=en')
   args('joueur02')
}
